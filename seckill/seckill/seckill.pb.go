// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: seckill.proto

package seckill

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSeckillHomeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSeckillHomeReq) Reset() {
	*x = GetSeckillHomeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeckillHomeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeckillHomeReq) ProtoMessage() {}

func (x *GetSeckillHomeReq) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeckillHomeReq.ProtoReflect.Descriptor instead.
func (*GetSeckillHomeReq) Descriptor() ([]byte, []int) {
	return file_seckill_proto_rawDescGZIP(), []int{0}
}

type GetSeckillReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSeckillReq) Reset() {
	*x = GetSeckillReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeckillReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeckillReq) ProtoMessage() {}

func (x *GetSeckillReq) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeckillReq.ProtoReflect.Descriptor instead.
func (*GetSeckillReq) Descriptor() ([]byte, []int) {
	return file_seckill_proto_rawDescGZIP(), []int{1}
}

func (x *GetSeckillReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSeckillHomeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Price string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Url   string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetSeckillHomeReply) Reset() {
	*x = GetSeckillHomeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeckillHomeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeckillHomeReply) ProtoMessage() {}

func (x *GetSeckillHomeReply) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeckillHomeReply.ProtoReflect.Descriptor instead.
func (*GetSeckillHomeReply) Descriptor() ([]byte, []int) {
	return file_seckill_proto_rawDescGZIP(), []int{2}
}

func (x *GetSeckillHomeReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSeckillHomeReply) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *GetSeckillHomeReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetSeckillHomeListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetSeckillHomeReply `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetSeckillHomeListReply) Reset() {
	*x = GetSeckillHomeListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeckillHomeListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeckillHomeListReply) ProtoMessage() {}

func (x *GetSeckillHomeListReply) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeckillHomeListReply.ProtoReflect.Descriptor instead.
func (*GetSeckillHomeListReply) Descriptor() ([]byte, []int) {
	return file_seckill_proto_rawDescGZIP(), []int{3}
}

func (x *GetSeckillHomeListReply) GetList() []*GetSeckillHomeReply {
	if x != nil {
		return x.List
	}
	return nil
}

type GetSeckillReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Price        string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Url          string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	IsSelf       bool   `protobuf:"varint,5,opt,name=isSelf,proto3" json:"isSelf,omitempty"` // 是否自营
	Desc         string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Residue      int64  `protobuf:"varint,7,opt,name=residue,proto3" json:"residue,omitempty"`          // 剩余
	LowPriceDesc string `protobuf:"bytes,8,opt,name=lowPriceDesc,proto3" json:"lowPriceDesc,omitempty"` // eg：30天最低价
}

func (x *GetSeckillReply) Reset() {
	*x = GetSeckillReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeckillReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeckillReply) ProtoMessage() {}

func (x *GetSeckillReply) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeckillReply.ProtoReflect.Descriptor instead.
func (*GetSeckillReply) Descriptor() ([]byte, []int) {
	return file_seckill_proto_rawDescGZIP(), []int{4}
}

func (x *GetSeckillReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSeckillReply) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *GetSeckillReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetSeckillReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetSeckillReply) GetIsSelf() bool {
	if x != nil {
		return x.IsSelf
	}
	return false
}

func (x *GetSeckillReply) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetSeckillReply) GetResidue() int64 {
	if x != nil {
		return x.Residue
	}
	return 0
}

func (x *GetSeckillReply) GetLowPriceDesc() string {
	if x != nil {
		return x.LowPriceDesc
	}
	return ""
}

type GetSeckillListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetSeckillReply `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetSeckillListReply) Reset() {
	*x = GetSeckillListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seckill_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeckillListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeckillListReply) ProtoMessage() {}

func (x *GetSeckillListReply) ProtoReflect() protoreflect.Message {
	mi := &file_seckill_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeckillListReply.ProtoReflect.Descriptor instead.
func (*GetSeckillListReply) Descriptor() ([]byte, []int) {
	return file_seckill_proto_rawDescGZIP(), []int{5}
}

func (x *GetSeckillListReply) GetList() []*GetSeckillReply {
	if x != nil {
		return x.List
	}
	return nil
}

var File_seckill_proto protoreflect.FileDescriptor

var file_seckill_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x22, 0x1f, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x48, 0x6f, 0x6d, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x4b, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x53, 0x65, 0x6c, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63,
	0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xa5, 0x01, 0x0a, 0x07,
	0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x52, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e,
	0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69,
	0x6c, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x63, 0x6b,
	0x69, 0x6c, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x48, 0x6f,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x46, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e,
	0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_seckill_proto_rawDescOnce sync.Once
	file_seckill_proto_rawDescData = file_seckill_proto_rawDesc
)

func file_seckill_proto_rawDescGZIP() []byte {
	file_seckill_proto_rawDescOnce.Do(func() {
		file_seckill_proto_rawDescData = protoimpl.X.CompressGZIP(file_seckill_proto_rawDescData)
	})
	return file_seckill_proto_rawDescData
}

var file_seckill_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_seckill_proto_goTypes = []interface{}{
	(*GetSeckillHomeReq)(nil),       // 0: seckill.GetSeckillHomeReq
	(*GetSeckillReq)(nil),           // 1: seckill.GetSeckillReq
	(*GetSeckillHomeReply)(nil),     // 2: seckill.GetSeckillHomeReply
	(*GetSeckillHomeListReply)(nil), // 3: seckill.GetSeckillHomeListReply
	(*GetSeckillReply)(nil),         // 4: seckill.GetSeckillReply
	(*GetSeckillListReply)(nil),     // 5: seckill.GetSeckillListReply
}
var file_seckill_proto_depIdxs = []int32{
	2, // 0: seckill.GetSeckillHomeListReply.list:type_name -> seckill.GetSeckillHomeReply
	4, // 1: seckill.GetSeckillListReply.list:type_name -> seckill.GetSeckillReply
	0, // 2: seckill.Seckill.getSeckillHomeList:input_type -> seckill.GetSeckillHomeReq
	1, // 3: seckill.Seckill.getSeckillList:input_type -> seckill.GetSeckillReq
	3, // 4: seckill.Seckill.getSeckillHomeList:output_type -> seckill.GetSeckillHomeListReply
	5, // 5: seckill.Seckill.getSeckillList:output_type -> seckill.GetSeckillListReply
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_seckill_proto_init() }
func file_seckill_proto_init() {
	if File_seckill_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_seckill_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeckillHomeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeckillReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeckillHomeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeckillHomeListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeckillReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seckill_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeckillListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_seckill_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_seckill_proto_goTypes,
		DependencyIndexes: file_seckill_proto_depIdxs,
		MessageInfos:      file_seckill_proto_msgTypes,
	}.Build()
	File_seckill_proto = out.File
	file_seckill_proto_rawDesc = nil
	file_seckill_proto_goTypes = nil
	file_seckill_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SeckillClient is the client API for Seckill service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SeckillClient interface {
	// 获取首页秒杀列表
	GetSeckillHomeList(ctx context.Context, in *GetSeckillHomeReq, opts ...grpc.CallOption) (*GetSeckillHomeListReply, error)
	// 获取秒杀列表
	GetSeckillList(ctx context.Context, in *GetSeckillReq, opts ...grpc.CallOption) (*GetSeckillListReply, error)
}

type seckillClient struct {
	cc grpc.ClientConnInterface
}

func NewSeckillClient(cc grpc.ClientConnInterface) SeckillClient {
	return &seckillClient{cc}
}

func (c *seckillClient) GetSeckillHomeList(ctx context.Context, in *GetSeckillHomeReq, opts ...grpc.CallOption) (*GetSeckillHomeListReply, error) {
	out := new(GetSeckillHomeListReply)
	err := c.cc.Invoke(ctx, "/seckill.Seckill/getSeckillHomeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *seckillClient) GetSeckillList(ctx context.Context, in *GetSeckillReq, opts ...grpc.CallOption) (*GetSeckillListReply, error) {
	out := new(GetSeckillListReply)
	err := c.cc.Invoke(ctx, "/seckill.Seckill/getSeckillList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SeckillServer is the server API for Seckill service.
type SeckillServer interface {
	// 获取首页秒杀列表
	GetSeckillHomeList(context.Context, *GetSeckillHomeReq) (*GetSeckillHomeListReply, error)
	// 获取秒杀列表
	GetSeckillList(context.Context, *GetSeckillReq) (*GetSeckillListReply, error)
}

// UnimplementedSeckillServer can be embedded to have forward compatible implementations.
type UnimplementedSeckillServer struct {
}

func (*UnimplementedSeckillServer) GetSeckillHomeList(context.Context, *GetSeckillHomeReq) (*GetSeckillHomeListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSeckillHomeList not implemented")
}
func (*UnimplementedSeckillServer) GetSeckillList(context.Context, *GetSeckillReq) (*GetSeckillListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSeckillList not implemented")
}

func RegisterSeckillServer(s *grpc.Server, srv SeckillServer) {
	s.RegisterService(&_Seckill_serviceDesc, srv)
}

func _Seckill_GetSeckillHomeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSeckillHomeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeckillServer).GetSeckillHomeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/seckill.Seckill/GetSeckillHomeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeckillServer).GetSeckillHomeList(ctx, req.(*GetSeckillHomeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Seckill_GetSeckillList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSeckillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeckillServer).GetSeckillList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/seckill.Seckill/GetSeckillList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeckillServer).GetSeckillList(ctx, req.(*GetSeckillReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Seckill_serviceDesc = grpc.ServiceDesc{
	ServiceName: "seckill.Seckill",
	HandlerType: (*SeckillServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getSeckillHomeList",
			Handler:    _Seckill_GetSeckillHomeList_Handler,
		},
		{
			MethodName: "getSeckillList",
			Handler:    _Seckill_GetSeckillList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "seckill.proto",
}
